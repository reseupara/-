<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reshome.mapper.OrderMapper">

	<insert id="order_add">
	
		<selectKey keyProperty="odr_code_pk" resultType="Long" order="BEFORE">
			select seq_order_code.nextval from dual
		</selectKey>
		
		insert into order_tab(odr_code_pk, mbme_id, odr_name, odr_zipcode, odr_add, odr_add2, odr_phone, odr_total_price)
values(#{odr_code_pk},#{mbme_id},#{odr_name},#{odr_zipcode},#{odr_add},#{odr_add2},#{odr_phone},#{odr_total_price})
	</insert>

	<!-- 장바구니테이블에 있는 상품을 기반으로 상품상세테이블 데이터 삽입하기 -->
	<insert id="orderDetail_add">
		insert into order_detail_tab(odr_code_pk, gds_num_pk, odr_amount, odr_price)
		select #{odr_code_pk}, p.gds_num_pk, c.cart_amount, p.gds_price
		from cart_tab c inner join goods_tab p
		on c.gds_num_pk = p.gds_num_pk
		where mbme_id = #{mbme_id}
	</insert>
	<!-- jsp에서 구매상품상세정보를 제공받아서 상품상세테이블 데이터 삽입하기 -->
	<insert id="orderDirect_add">
		insert into order_detail_tab(odr_code_pk, gds_num_pk, odr_amount, odr_price)
		values(#{odr_code_pk}, #{gds_num_pk}, #{odr_amount}, #{odr_price})
	</insert>
	
	<sql id="criteria">
		<trim prefix="(" suffix=") and" prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'N'.toString()">
							odr_code_pk like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'D'.toString()">
							mbme_id like '%' || #{keyword} || '%'
						</when>
						<when test="type == 'C'.toString()">
							odr_name like '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	<select id="orderInfo_list" resultType="com.reshome.domain.OrderVO">
	
		<![CDATA[
		select odr_code_pk, mbme_id, odr_name, odr_zipcode,
                odr_add, odr_add2, odr_phone, odr_total_price, odr_reg
		from
		    (select /*+ index_desc(order_tab SYS_C007962 ) */ rownum rn, odr_code_pk, mbme_id, odr_name, odr_zipcode,
                odr_add, odr_add2, odr_phone, odr_total_price, odr_reg from order_tab
                where odr_code_pk > 0 and
        ]]>
                <include refid="criteria"></include>
         
        <![CDATA[
            rownum > 0 and rownum <= #{pageNum} * #{amount})
			
		where rn  > (#{pageNum}-1) * #{amount}
		]]>	
	</select>
	
	<select id="getTotalCountOrder" resultType="int">
		select count(*) from order_tab where
		
			<include refid="criteria"></include>
		
		<![CDATA[
		odr_code_pk > 0
		]]>
	</select>
	
	<select id="order_detail_list" resultType="com.reshome.domain.OrderDetailListVO">
		select
			od.odr_code_pk, od.gds_num_pk, od.odr_amount, od.odr_price, p.gds_name, p.gds_img
		from order_detail_tab od inner join goods_tab p
		on od.gds_num_pk = p.gds_num_pk
		where od.odr_code_pk = #{odr_code_pk}
	</select>
	
	<select id="order_sale" resultType="com.reshome.dto.OrderSaleDTO">
		<![CDATA[
		select to_char(b.dt, 'YYYY-MM-DD') as hiredate , to_char(b.dt, 'DY') as day, nvl(a.cnt,0) as cnt
		from (
		        select to_char(hire_date, 'YYYY-MM-DD') as hiredate, count(*) as cnt
		        from employees
		        where hire_date between to_date(#{startDate}, 'YYYY-MM-DD') and to_date(#{endDate},'YYYY-MM-DD')
		        group by hire_date
		     ) a
		     ,
		     (
		         select to_date(#{startDate},'YYYY-MM-DD') + level  - 1 as dt
		        from dual
		        
		        connect by level <= (to_date(#{endDate},'YYYY-MM-DD') - to_date(#{startDate},'YYYY-MM-DD')+ 1)
		        
		     ) b
		where b.dt = a.hiredate(+)
		order by b.dt
		]]>
	</select>
	
	



</mapper>